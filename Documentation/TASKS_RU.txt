Максим:
	+ Реализовать прыжок. Я предлагаю сделать интерфейс Jumpable, объекты 
которого должны реализовывать функцию jump(). Данная операция имеет определенные 
требования:
		* Ограничение высоты прыжка. Высоту прыжка лучше всего мерять целым 
числом кратности высоты блока игрока, т.е. когда блок в прыжке достигает, 
например, пятикратной высоты игрока, его вертикальная скорость становится 
равной нулю и он начинает падать под действием гравитации.
		* Блок не может прыгать, если под ним нет никакой опоры. То есть если 
блок стоит на чем-либо, то вызов функции прыжка должен заставлять блок 
прыгнуть, но если блок не имеет под собой опоры, т.е. находится в полете, то 
вызов функции прыжка не должен производить никакого эффекта.
	Если реализовать прыжок посредством интерфейса и наследования от него 
блоков, способных прыгать, то можо будет создать в классе игры функцию прыжка, 
вызываемую нажатием пробела, которая принимает в качестве параметра объект 
типа Jumpable, и передавать в нее блок игрока.

	+ Заменить численные значения углов в разрешении коллизий на вычисляемые 
динамически на основе размера блока (формулу давал тебе на бумажке, но 
напоминаю, что достаточно заменить это на угол между двумя точками 
описывающими блок).

Настя:
	+ Найти анимированные картинки для игрока и пока что одного моба, добавить 
их в проект. (Анимации обычно имеют формат .gif)
	+ Добавить эти изображения в игру так, чтобы при беге игрока была анимация 
бега на его персонаже.

Миша:
	+ Создать в классе игры словать или отображение Блок : Изображение которое 
будет содержать изображение для отрисовки в гуи для каждого блока.
	+ Добавить в GameAPI и в его реализацию функцию, которая будет возвращать 
пары блок - изображение для каждого блока по аналогии с уже существующей 
функцией getAllUnitsCoordinates();

Шпоргалка как пользоваться гитом в файле file howto_git_ru.txt 
